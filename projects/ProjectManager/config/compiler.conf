overall_options
    -v|Afficher les commandes exécutées|Affiche les commandes exécutées lors des étapes de compilations. Affiche aussi les versions de pilote de compilateur et de de processeur ainsi que le compilateur approprié.
    -###|Comme -v mais sans exécution|Effectue la même chose que l'option <strong>-v</strong> mais n'exécute pas les commandes et écrit les arguments entre guillemets sauf s'ils contiennent uniquement des caractères alphanumériques et "<i>./-_</i>".
    --version|Affiche la version|Affiche la version du compilateur lors de l'appel.
    -pass-exit-codes|Retourne le plus haut code d'erreur|Par défaut, le compilateur renvoie <strong>1</strong> en cas d'erreur. Avec cette option, il renverra le plus haut code de retour rencontré lors de la compilation.
    -pipe|Utiliser des pipes|Le compilateur utilisera des pipes plutôt que des fichiers temporaires pour ses actions. Attention, ne fonctionne pas avec certains assembleurs.
    -specs=[file]|Traite le fichier [file] après le fichiers specs standard|Ceci permet de redéfinir des variables pour le pilotes du compilateur et déterminer quel comutateur passer aux programmes <strong>ld, as, cc1, cc1plu, ...</strong> Plusieurs de ces fichiers peuvent être définis et sont traités dans l'ordre d'apparition.
    -wrapper|Permet de définir un programme wrapper|Le nom du programme wrapper et ses paramètres sont transmis sous forme de liste séparée par des virgules. Tous les sous programmes appelés seront appelés avec ce wrapper.
    -ffile-prefix-map=[old]=[new]|Change la localisation des références|Permet de compiler des fichiers dans le dossier old comme s'ils se trouvaient dans le dossier old.
    -fplugin=[name].so|Chargement de plugin|Permet de charger le plugin [<i>name</i>].so. Ce fichier doit être dynamique pour être chargé par dlopen.
    -fplugin-arg-[name]-[key]=[value]|Définition d'argument de plugin|Cette option défini l'argument [<i>key</i>] du plugin [<i>name</i>] à la valeur [<i>value</i>].
    -fdump-ada-spec[-slim]|Génère les specs Ada|Pour des sources C/C++ et des fichiers includes, génère les specs Ada.
    -fada-spec-parent=[unit]|Génère les specs Ada filles|Avec l'option <strong>-fdump-ada-spec[-slim]</strong>, génère les specs Ada comme filles de l'unité [<i>unit</i>].
    -fdump-go-spec=[file]|Générer les déclarations Go|Génère les type Go "<i>const</i>", "<i>type</i>", "<i>var</i>" et "<i>func</i>" pour permettre la génération d'une interface Go avec du code dans un autre langage.
    @[file]|Inclure les options d'un fichier|Inclut les options du fichier [<i>file</i>] à la place de cette option.

c_language
    -ansi|Mode ANSI|Désactive certaines fonctionnalités de GCC qui sont incompatible avec ISO C90 (en C) ou de la librairie standard (en C++). Equivaut à <strong>-std=c90</strong> en C ou <strong>-std=c++98</strong> en C++.
    -std=[standard]|Détermine le langage standard|Permet de définir le langage standard parmi : <strong>c90, c89, iso9899:1990, iso9899:199409, c99, c9x, iso9899:1999, iso9899:199x, c11, c1x, iso9899:2011, c17, c18, iso9899:2017, iso9899:2018, c2x, gnu90, gnu89, gnu99, gnu9x, gnu11, gnu1x, gnu17, gnu18, gnu2x, c++98, c++03, gnu++98, gnu++03, c++11, c++0x, gnu++11, gnu++0x, c++14, c++1y, gnu++14, gnu++1y, c++17, c++1z, gnu++17, gnu++1z,  c++2a, gnu++2a</strong>.
    -fgnu89-inline|Utiliser la sémentique "inline" traditionnelle de GNU en mode C99|Equivalent à ajouter "<i>gnu_inline</i>" comme attribut de chaque fonction inline. N'est pas supporté en mode C90. Utiliser <strong>-fno-gnu89-inline</strong> pour utiliser la sémentique "<i>inline</i>" en mode C99. Les macros "<strong>__GNUC_GNU_INLINE__</strong>" et "<strong>__GNUC_STDC_INLINE__</strong>" permettent de savoir quelle sémentique est utilisée.
    -fpermitted-flt-eval-methods=[style]|Spécifier les valeurs utilisées de FLT_EVAL_METHOD|[<i>style</i>] vaut <strong>c11</strong> si le compilateur doit utiliser uniquement les valeurs spécifiées dans C99/C11, sinon [<i>style</i>] vaut <strong>ts-18661-3</strong> pour un dialecte GNU.
    -aux-info [filename]|Spécifier un fichier d'information des déclarations|Seulement pour langage C.<br/>[<i>filename</i>] sera utilisé comme fichier de sortie pour lister les déclarations. De plus, il liste l'origine de la déclaration, si la déclaration est implicite, prototypée ou non prototypée et s'il provenait d'une déclaration ou d'une définition.
    -fallow-parameterless-variadic-functions|Autoriser les fonctions avec arguments non nommés|Seulement pour langage C/C++.
    -fno-asm|Ne pas reconnaitre les mots clés "inline", "typeof" et "asm"|Les mots clés "<i>inline</i>", "<i>typeof</i>" et "<i>asm</i>" ne seront pas reconnus. Les mots clés "<strong>__inline__</strong>", "<strong>__typeof__</strong>" et "<strong>__asm__</strong>" devront être utilisés. L'option <strong>-ansi</strong> implique cette option.<br/>En C++, utiliser <strong>-fno-gnu-keywords</strong>.
    -fno-builtin[-function]|Ne pas reconnaitre les fonction built-inqui ne commence pas par __builtin_|Si [<i>-function</i>] est remplie, seule cette fonction sera désactivée.
    -fgimple|Autoriser l'analyse __GIMPLE|Cette fonction expérimentale permet les tests unitaires GIMPLE.
    -fhosted|Affirmer que la compilation est hébergée|Affirmer que la librairie standard est présente sur la cible et que les fonctions <i>main</i> retourne un élément de type <i>int</i>.<br/>Implique <strong>-fbuiltin</strong>.<br/>Equivaut à <strong>-fno-freestanding</strong>.
    -ffreestanding|Affirmer que la compilation cible un environnement autonome|La librairie standard n'est pas forcément sur la cible et les programme peuvent ne pas contenir de fonction main.<br/>Implique <strong>-fno-builtin</strong>.<br/>Equivaut à <strong>-fno-hosted</strong>.
    -fopenacc|Autoriser les directives OpenACC|Les directives "<strong>#pragma acc</strong>" en C/C++ et "<strong>!$acc</strong>" en Fortran. Accélère la génération selon l'interface de programmation OpenACC.<br/>Cette option implique <strong>-pthread</strong>.
    -fopenacc-dim=[geom]|Spécifier les dimention de calcul par défaut|Utilisé pour les régions de déchargement parallèles qui ne le spécifient pas explicitement. La valeur [<i>geom</i>] est un triplet de <strong>:</strong>-tailles séparées, dans l'ordre <i>gang</i>, <i>worker</i> et <i>vecteur</i>. Une taille peut être omise pour utiliser une valeur par défaut spécifique à la cible.
    -fopenmp|Autoriser les directives OpenMP|Les directives "<strong>#pragma omp</strong>" en C/C++ et "<strong>!$aomp</strong>" en Fortran. Accélère la génération selon l'interface de programmation OpenMP.<br/>Cette option implique <strong>-pthread</strong> et <strong>-fopenmp-simd</strong>.
    -fopenmp-simd|Autoriser les directives OpenMP (short)|Les directives "<strong>#pragma omp</strong>" en C/C++ et "<strong>!$aomp</strong>" en Fortran. Les autres directives OpenMP sont ignorées.
    -fcilkplus|Ajouter les extensions Cilk Plus pour C/C++|Cette option est expérimentale et contient toute les extensions sauf <i>_Cilk_for</i>.

cxx_language
